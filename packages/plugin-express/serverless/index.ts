import {PluginConfig, PluginOptions} from '@sdr/core';
import * as ejs from 'ejs';

export function plugin(options: PluginOptions, config: {}) {

  return ejs.render(
    // language=EJS
    `# This file was generated by https://github.com/schema-driven-rest/plugin-serverless-api-base
<% for(const type of types) { %><%
        const controllerName = type.name;
        const {
            parameters: [{value: controllerPath}],
        } = type.directives.find(a => a.name === 'controller');

    %><% for(const method of type.methods) { %><%
            const requestDirective = method.directives.find(a => a.name === 'request');
            const requiresAuth = !!method.directives.find(a => a.name === 'auth');
            const methodName = method.name;

            if (!requestDirective) {
                throw \`This plugin requires all methods to have a request directive. \${method.name} is missing.\`;
            }
            const methodPath = requestDirective.parameters.find(parameter => parameter.name === 'path').value;
            const methodType = requestDirective.parameters.find(parameter => parameter.name === 'method').value;

        %>  <%=controllerName%>_<%=methodName%>:
     handler: handler.<%=controllerName%>_<%=methodName%>
     events:
       - http:
           path: <%=controllerPath%>/<%=methodPath%>
           method: <%=methodType%>
           cors:
             origin: '*'
<% } %><% } %>`,
    {
      types: options.types.filter(a=>a.directives.find(a => a.name === 'controller')),
    },
    {}
  );
}

export const config: PluginConfig = {
  dependsOn: ['@sdr/controller'],
};
