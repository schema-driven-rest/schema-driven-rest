import {PluginConfig, PluginOptions} from '@sdr/core';
import {plugin as typeDefsGenerator} from './type-graphql/index';
import {buildSchema} from 'graphql';

export function plugin(options: PluginOptions) {
  const schema = buildSchema(options.schemaString);

  let typeMap = schema.getTypeMap();
  for (const key in typeMap) {
    if (!typeMap[key].astNode?.directives.some(a => a.name.value === 'model')) {
      delete typeMap[key];
    }
  }

  const typeDefsGeneratorResult = typeDefsGenerator(schema, [], {skipTypename: true}) as {
    content: string;
    prepend?: string[];
    append?: string[];
  };

  return (
    `/* This file was generated by https://github.com/schema-driven-rest/plugin-models */\r\n` +
    (typeDefsGeneratorResult.prepend?.join('\r\n') ?? '') +
    typeDefsGeneratorResult.content +
    '\r\n' +
    (typeDefsGeneratorResult.append?.join('\r\n') ?? '')
  );
}

export const config: PluginConfig = {
  dependsOn: ['@sdr/controller'],
};
