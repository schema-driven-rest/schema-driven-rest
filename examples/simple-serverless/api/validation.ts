/* This file was generated by https://github.com/schema-driven-rest/plugin-validate-models */
/* tslint:disable */
export function validateLoginRequest(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.username === null || model.username === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.username !== 'string') {
    return false;
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
export function validateLoginResponse(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.authorized === null || model.authorized === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.authorized !== 'boolean') {
    return false;
  }
  if (model.jwt === null || model.jwt === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.jwt !== 'string') {
    return false;
  }
  if (model.details !== null && model.details !== undefined) {
    fieldCount++;
    if (!Array.isArray(model.details)) {
      return false;
    }
    for (let ind1 = 0; ind1 < model.details.length; ind1++) {
      if (model.details[ind1] !== null && model.details[ind1] !== undefined) {
        if (typeof model.details[ind1] !== 'string') {
          return false;
        }
      }
    }
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
export function validateGetUserRequest(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.userId === null || model.userId === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.userId !== 'string') {
    return false;
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
export function validateUserResponse(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.user === null || model.user === undefined) {
    return false;
  }
  fieldCount++;
  if (validateUserModel(model.user)) {
    return false;
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
export function validateUserModel(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.email === null || model.email === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.email !== 'string') {
    return false;
  }
  if (model.eyeColor === null || model.eyeColor === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.eyeColor !== 'number') {
    return false;
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
export function validateUpdateUserRequest(model: any) {
  if (model === null || model === undefined) return false;
  let fieldCount = 0;
  if (model.email === null || model.email === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.email !== 'string') {
    return false;
  }
  if (model.eyeColor === null || model.eyeColor === undefined) {
    return false;
  }
  fieldCount++;
  if (typeof model.eyeColor !== 'number') {
    return false;
  }
  if (Object.keys(model).length !== fieldCount) return false;
  return true;
}
